#!/bin/sh

MIXER="default"
lsmod | grep -q pulse && MIXER="pulse"
lsmod | grep -q jack && MIXER="jackplug"
MIXER="${2:-$MIXER}"

SCONTROL="${BLOCK_INSTANCE:-$(amixer -D "$MIXER" scontrols |
                  sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p" |
                  head -n1
                )}"

STEP="${1:-5%}"

capability() { # Return "Capture" if the device is a capture device
  amixer -D $MIXER get $SCONTROL |
    sed -n "s/  Capabilities:.*cvolume.*/Capture/p"
}

volume() {
  amixer -D $MIXER get $SCONTROL $(capability)
}

format() {
  perl_filter='if (/.*\[(\d+%)\] (\[(-?\d+.\d+dB)\] )?\[(on|off)\]/)'
  perl_filter+='{CORE::say $4 eq "off" ? "MUTE" : "'
  # If dB was selected, print that instead
  perl_filter+=$([[ $STEP = *dB ]] && echo '$3' || echo '$1')
  perl_filter+='"; exit}'
  perl -ne "$perl_filter"
}

output=$(volume | format)

if [ "$output" = "MUTE" ]; then
    label=
else
    # TODO provide icon ( , ) when low volume
    label=
fi

long_text=""

case $BLOCK_BUTTON in
    1) long_text="$output";;
    2) amixer -q -D $MIXER sset $SCONTROL $(capability) toggle ;;  # right click, mute/unmute
    3) pavucontrol & ;;
    4) amixer -q -D $MIXER sset $SCONTROL $(capability) ${STEP}+ unmute ;; # scroll up, increase
    5) amixer -q -D $MIXER sset $SCONTROL $(capability) ${STEP}- unmute ;; # scroll down, decrease
esac

echo "$label $long_text"
